import streamlit as st
import pandas as pd
from joblib import load
from PIL import Image
import os

# ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå
def load_image(path):
    if os.path.exists(path):
        return Image.open(path)
    else:
        st.warning(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û: {path}")
        return None

HairG = load_image("hairgrowP.jpg")
Skindarken = load_image("skin darkenP.jpg")

st.title("ü©∫ Assessing the Risk of Polycystic Ovary Syndrome (PCOS)")
st.markdown("""
## ‡πÅ‡∏≠‡∏õ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÇ‡∏£‡∏Ñ‡∏ñ‡∏∏‡∏á‡∏ô‡πâ‡∏≥‡∏£‡∏±‡∏á‡πÑ‡∏Ç‡πà‡∏´‡∏•‡∏≤‡∏¢‡πÉ‡∏ö  
‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì  
‚ö†Ô∏è **‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:** ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡∏à‡∏≤‡∏Å‡πÅ‡∏û‡∏ó‡∏¢‡πå
""")

st.sidebar.header("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
def user_input_features():
    Age = st.sidebar.slider('‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏õ‡∏µ)', 0, 100, 22)
    Weight = st.sidebar.slider('‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°)', 0, 150, 79)
    Cycle = st.sidebar.slider('‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏°‡∏≤‡∏Å‡∏µ‡πà‡∏ß‡∏±‡∏ô', 0, 31, 7)
    CycleLength = st.sidebar.slider('‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡∏≠‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏ß‡∏±‡∏ô)', 0, 60, 16)
    hairGrowth = st.sidebar.slider('‡∏Ç‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà', 0, 1, 1)
    if HairG:
        st.sidebar.image(HairG, caption="Ferriman Hair Growth Chart", use_container_width=True)

    SkinDarkening = st.sidebar.slider('‡∏ú‡∏¥‡∏ß‡∏î‡∏≥‡∏Ñ‡∏•‡πâ‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà', 0, 1, 0)
    if Skindarken:
        st.sidebar.image(Skindarken, caption="‡∏à‡∏∏‡∏î‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡∏ú‡∏¥‡∏ß‡∏Ñ‡∏•‡πâ‡∏≥", use_container_width=True)

    Pimples = st.sidebar.slider('‡∏™‡∏¥‡∏ß‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà', 0, 1, 1)
    Fastfood = st.sidebar.slider('‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏Ç‡∏°‡∏±‡∏ô‡∏™‡∏π‡∏á‡∏ö‡πà‡∏≠‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà', 0, 1, 0)
    FollicleL = st.sidebar.slider('‡∏£‡∏π‡∏Ç‡∏∏‡∏°‡∏Ç‡∏ô‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢', 0, 1, 1)
    FollicleR = st.sidebar.slider('‡∏£‡∏π‡∏Ç‡∏∏‡∏°‡∏Ç‡∏ô‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤', 0, 1, 1)
    WeightGain = st.sidebar.slider('‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡πá‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà', 0, 1, 1)

    data = {
        'Age (yrs)': Age,
        'Weight (Kg)': Weight,
        'Cycle(R/I)': Cycle,
        'Cycle length(days)': CycleLength,
        'hair growth(Y/N)': hairGrowth,
        'Skin darkening (Y/N)': SkinDarkening,
        'Pimples(Y/N)': Pimples,
        'Fast food (Y/N)': Fastfood,
        'Follicle No. (L)': FollicleL,
        'Follicle No. (R)': FollicleR,
        'Weight gain(Y/N)': WeightGain
    }

    return pd.DataFrame(data, index=[0])

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
model_path = "PcosApp.joblib"
if not os.path.exists(model_path):
    st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏•: {model_path}")
    st.stop()

app = load(model_path)

df = user_input_features()
st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏£‡∏≠‡∏Å")
st.write(df)

if st.button("‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á"):
    prediction = app.predict(df)
    prediction_proba = app.predict_proba(df)

    if prediction[0] == 1:
        st.error("**‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:** ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á ‡∏Ñ‡∏ß‡∏£‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°")
    else:
        st.success("**‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:** ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≥")

    st.subheader("‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á")
    st.write({
        "‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≥": f"{prediction_proba[0][0]*100:.2f}%",
        "‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á": f"{prediction_proba[0][1]*100:.2f}%"
    })
